{"ast":null,"code":"import { applyMiddleware, createStore } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { combineReducers } from \"redux\";\nimport messageReducer from './redux/reducers/messageReducer';\nimport userReducer from './redux/reducers/userReducer';\nexport default function configureStore(preloadedState) {\n  var middlewares = [thunkMiddleware];\n  var middlewareEnhancer = applyMiddleware.apply(void 0, middlewares);\n  var enhancers = [middlewareEnhancer];\n  var composedEnhancers = composeWithDevTools.apply(void 0, enhancers);\n  var rootReducer = combineReducers({\n    messageReducer: messageReducer,\n    userReducer: userReducer\n  });\n  var store = createStore(rootReducer, preloadedState, composedEnhancers);\n  return store;\n}","map":{"version":3,"sources":["/Users/arjuna/School/Spring2019/CSC-667/Final-Project/final-aspiring-developers/chat-app/src/configureStore.js"],"names":["applyMiddleware","createStore","thunkMiddleware","composeWithDevTools","combineReducers","messageReducer","userReducer","configureStore","preloadedState","middlewares","middlewareEnhancer","enhancers","composedEnhancers","rootReducer","store"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,eAAT,QAAgC,OAAhC;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AAEA,eAAe,SAASC,cAAT,CAAwBC,cAAxB,EAAwC;AACrD,MAAMC,WAAW,GAAG,CAACP,eAAD,CAApB;AACA,MAAMQ,kBAAkB,GAAGV,eAAe,MAAf,SAAmBS,WAAnB,CAA3B;AACA,MAAME,SAAS,GAAG,CAACD,kBAAD,CAAlB;AACA,MAAME,iBAAiB,GAAGT,mBAAmB,MAAnB,SAAuBQ,SAAvB,CAA1B;AACA,MAAME,WAAW,GAAGT,eAAe,CAAC;AAClCC,IAAAA,cAAc,EAAdA,cADkC;AAClBC,IAAAA,WAAW,EAAXA;AADkB,GAAD,CAAnC;AAIA,MAAMQ,KAAK,GAAGb,WAAW,CAACY,WAAD,EAAcL,cAAd,EAA8BI,iBAA9B,CAAzB;AAEA,SAAOE,KAAP;AACD","sourcesContent":["import { applyMiddleware, createStore } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { combineReducers } from \"redux\"\nimport messageReducer from './redux/reducers/messageReducer';\nimport userReducer from './redux/reducers/userReducer';\n\nexport default function configureStore(preloadedState) {\n  const middlewares = [thunkMiddleware]\n  const middlewareEnhancer = applyMiddleware(...middlewares)\n  const enhancers = [middlewareEnhancer]\n  const composedEnhancers = composeWithDevTools(...enhancers)\n  const rootReducer = combineReducers({\n    messageReducer, userReducer\n  });\n  \n  const store = createStore(rootReducer, preloadedState, composedEnhancers)\n\n  return store\n}"]},"metadata":{},"sourceType":"module"}