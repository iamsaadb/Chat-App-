{"ast":null,"code":"import _toConsumableArray from \"/Users/arjuna/School/Spring2019/CSC-667/Final-Project/final-aspiring-developers/chat-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/arjuna/School/Spring2019/CSC-667/Final-Project/final-aspiring-developers/chat-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar INITIAL_STATE = {\n  userList: [],\n  currentUser: 'timmy'\n};\n\nvar userReducer = function userReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'UPDATE_USER':\n      return _objectSpread({}, state, {\n        currentUser: action.user\n      });\n\n    case 'UPDATE_USERLIST':\n      return _objectSpread({}, state, {\n        userList: action.list\n      });\n\n    case 'ADD_USER':\n      return _objectSpread({}, state, {\n        userList: [].concat(_toConsumableArray(state.userList), [action.user])\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;","map":{"version":3,"sources":["/Users/arjuna/School/Spring2019/CSC-667/Final-Project/final-aspiring-developers/chat-app/src/redux/reducers/userReducer.js"],"names":["INITIAL_STATE","userList","currentUser","userReducer","state","action","type","user","list"],"mappings":";;AAAA,IAAMA,aAAa,GAAG;AAClBC,EAAAA,QAAQ,EAAE,EADQ;AAElBC,EAAAA,WAAW,EAAE;AAFK,CAAtB;;AAKE,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAmC;AAAA,MAAlCC,KAAkC,uEAA1BJ,aAA0B;AAAA,MAAXK,MAAW;;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACE,+BACKF,KADL;AAEEF,QAAAA,WAAW,EAAEG,MAAM,CAACE;AAFtB;;AAKF,SAAK,iBAAL;AACE,+BACKH,KADL;AAEEH,QAAAA,QAAQ,EAAEI,MAAM,CAACG;AAFnB;;AAKF,SAAK,UAAL;AACE,+BACKJ,KADL;AAEEH,QAAAA,QAAQ,+BAAMG,KAAK,CAACH,QAAZ,IAAsBI,MAAM,CAACE,IAA7B;AAFV;;AAKF;AACE,aAAOH,KAAP;AApBJ;AAsBD,CAvBD;;AAyBA,eAAeD,WAAf","sourcesContent":["const INITIAL_STATE = {\n    userList: [],\n    currentUser: 'timmy',\n  };\n  \n  const userReducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n      case 'UPDATE_USER':\n        return {\n          ...state,\n          currentUser: action.user,\n        };\n\n      case 'UPDATE_USERLIST':\n        return {\n          ...state,\n          userList: action.list,\n        };\n\n      case 'ADD_USER':\n        return {\n          ...state,\n          userList: [...state.userList, action.user],  \n        };\n\n      default:\n        return state;\n    }\n  };\n  \n  export default userReducer;"]},"metadata":{},"sourceType":"module"}