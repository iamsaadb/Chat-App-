{"ast":null,"code":"import _objectWithoutProperties from \"/Users/arjuna/School/Spring2019/CSC-667/Final-Project/final-aspiring-developers/chat-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/Users/arjuna/School/Spring2019/CSC-667/Final-Project/final-aspiring-developers/chat-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/arjuna/School/Spring2019/CSC-667/Final-Project/final-aspiring-developers/chat-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/arjuna/School/Spring2019/CSC-667/Final-Project/final-aspiring-developers/chat-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/arjuna/School/Spring2019/CSC-667/Final-Project/final-aspiring-developers/chat-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/arjuna/School/Spring2019/CSC-667/Final-Project/final-aspiring-developers/chat-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/arjuna/School/Spring2019/CSC-667/Final-Project/final-aspiring-developers/chat-app/src/ChatPage.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { updateMessages, handlTextChange, submitMessage } from './redux/actions/messageActions';\nimport { updateUserList } from './redux/actions/userActions';\nimport './App.css';\n\nvar Message = function Message(_ref) {\n  var message = _ref.message,\n      author = _ref.author;\n  return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, author, \": \", message, \" \"));\n};\n\nvar ChatPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ChatPage, _Component);\n\n  function ChatPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ChatPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ChatPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onSubmit = function () {\n      _this.props.submitMessage();\n    };\n\n    _this.handleTextChange = function (e) {\n      _this.props.handlTextChange(e.target.value);\n    };\n\n    return _this;\n  }\n\n  _createClass(ChatPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get('/messanger/getMessages').then(function (res) {\n        //filters out the id attribute from the database array, saves to redux store:\n        console.log(res.data);\n        var resultArray = res.data;\n        var messageList = resultArray.map(function (_ref2) {\n          var _id = _ref2._id,\n              keepAttrs = _objectWithoutProperties(_ref2, [\"_id\"]);\n\n          return keepAttrs;\n        });\n\n        _this2.props.updateMessages(messageList);\n      }).catch(function (e) {\n        console.log(e);\n      });\n      axios.get('/messanger/getUsers').then(function (res) {\n        //filters out the data portion from the database array, saves to redux store:\n        var resultArray = res.data;\n        var userList = resultArray.map(function (_ref3) {\n          var _id = _ref3._id,\n              keepAttrs = _objectWithoutProperties(_ref3, [\"_id\"]);\n\n          return keepAttrs;\n        });\n\n        _this2.props.updateUserList(userList);\n      }).catch(function (e) {\n        console.log(e);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"ChatPage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"message-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, this.props.messages.map(function (message, i) {\n        return React.createElement(Message, {\n          key: i,\n          message: message.message,\n          author: message.author === _this3.props.user ? 'me' : message.author,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        });\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        value: this.props.text,\n        onChange: this.handleTextChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }]);\n\n  return ChatPage;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    messages: state.messageReducer.messages,\n    text: state.messageReducer.text,\n    user: state.userReducer.currentUser\n  };\n};\n\nvar mapDispatchToProps = {\n  updateMessages: updateMessages,\n  updateUserList: updateUserList,\n  handlTextChange: handlTextChange,\n  submitMessage: submitMessage\n};\nexport default connect( // from react-redux\nmapStateToProps, mapDispatchToProps)(ChatPage);","map":{"version":3,"sources":["/Users/arjuna/School/Spring2019/CSC-667/Final-Project/final-aspiring-developers/chat-app/src/ChatPage.js"],"names":["React","Component","axios","connect","updateMessages","handlTextChange","submitMessage","updateUserList","Message","message","author","ChatPage","onSubmit","props","handleTextChange","e","target","value","get","then","res","console","log","data","resultArray","messageList","map","_id","keepAttrs","catch","userList","messages","i","user","text","mapStateToProps","state","messageReducer","userReducer","currentUser","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { updateMessages, handlTextChange, submitMessage } from './redux/actions/messageActions';\nimport { updateUserList } from './redux/actions/userActions';\nimport './App.css';\n\nconst Message = ({message, author}) => (\n\t<p> \n\t     <i>{author}: {message} </i>\n\t</p>)\n\nclass ChatPage extends Component {\n  componentDidMount() {\n    axios.get('/messanger/getMessages')\n      .then((res) => {\n\n        //filters out the id attribute from the database array, saves to redux store:\n        console.log(res.data);\n        const resultArray = (res.data);\n        const messageList = resultArray.map(({_id, ...keepAttrs}) => keepAttrs);\n        this.props.updateMessages(messageList);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n\n      axios.get('/messanger/getUsers')\n      .then((res) => {\n\n        //filters out the data portion from the database array, saves to redux store:\n        const resultArray = (res.data);\n        const userList = resultArray.map(({_id, ...keepAttrs}) => keepAttrs);\n        this.props.updateUserList(userList);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n\n  onSubmit = () => {\n    this.props.submitMessage();\n  }\n\n  handleTextChange = (e) => {\n    this.props.handlTextChange(e.target.value);\n  }\n\n  render() {\n    return (\n      <div className=\"ChatPage\">\n        <div>\n          <div className=\"message-area\">      \n              \n            {this.props.messages.map((message, i) => \n               <Message key={i} \n                        message={message.message}\n                        author={message.author === this.props.user? 'me' : message.author}\n                />) } \n          </div>\n        </div>\n        <div>\n          <input type=\"text\" value={this.props.text} onChange={this.handleTextChange} />\n        </div>\n        <div>\n          <button onClick={this.onSubmit}>Submit</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    messages: state.messageReducer.messages,\n    text: state.messageReducer.text,\n    user: state.userReducer.currentUser,\n  };\n};\n\nconst mapDispatchToProps = { updateMessages, updateUserList, handlTextChange, submitMessage };\n\nexport default connect( // from react-redux\n  mapStateToProps,\n  mapDispatchToProps,\n)(ChatPage);\n"]},"metadata":{},"sourceType":"module"}