{"ast":null,"code":"import _toConsumableArray from \"/Users/arjuna/School/Spring2019/CSC-667/Final-Project/final-aspiring-developers/chat-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/arjuna/School/Spring2019/CSC-667/Final-Project/final-aspiring-developers/chat-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar INITIAL_STATE = {\n  messages: [],\n  text: ''\n};\n\nvar messageReducer = function messageReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'UPDATE_MESSAGES':\n      return _objectSpread({}, state, {\n        messages: action.messages\n      });\n\n    case 'UPDATE_TEXT':\n      return _objectSpread({}, state, {\n        text: action.text\n      });\n\n    case 'INSERT_MESSAGE':\n      return _objectSpread({}, state, {\n        messages: [].concat(_toConsumableArray(state.messages), [action.message])\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default messageReducer;","map":{"version":3,"sources":["/Users/arjuna/School/Spring2019/CSC-667/Final-Project/final-aspiring-developers/chat-app/src/redux/reducers/messageReducer.js"],"names":["INITIAL_STATE","messages","text","messageReducer","state","action","type","message"],"mappings":";;AAAA,IAAMA,aAAa,GAAG;AACpBC,EAAAA,QAAQ,EAAE,EADU;AAEpBC,EAAAA,IAAI,EAAE;AAFc,CAAtB;;AAKA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAmC;AAAA,MAAlCC,KAAkC,uEAA1BJ,aAA0B;AAAA,MAAXK,MAAW;;AACxD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,iBAAL;AACE,+BACKF,KADL;AAEEH,QAAAA,QAAQ,EAAEI,MAAM,CAACJ;AAFnB;;AAIF,SAAK,aAAL;AACE,+BACKG,KADL;AAEEF,QAAAA,IAAI,EAAEG,MAAM,CAACH;AAFf;;AAIF,SAAK,gBAAL;AACE,+BACKE,KADL;AAEEH,QAAAA,QAAQ,+BAAMG,KAAK,CAACH,QAAZ,IAAsBI,MAAM,CAACE,OAA7B;AAFV;;AAIF;AACE,aAAOH,KAAP;AAjBJ;AAmBD,CApBD;;AAsBA,eAAeD,cAAf","sourcesContent":["const INITIAL_STATE = {\n  messages: [],\n  text: '',\n};\n\nconst messageReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case 'UPDATE_MESSAGES':\n      return {\n        ...state,\n        messages: action.messages,\n      };\n    case 'UPDATE_TEXT':\n      return {\n        ...state,\n        text: action.text,\n      };\n    case 'INSERT_MESSAGE':\n      return {\n        ...state,\n        messages: [...state.messages, action.message],\n      };\n    default:\n      return state;\n  }\n};\n\nexport default messageReducer;"]},"metadata":{},"sourceType":"module"}