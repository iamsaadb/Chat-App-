{"version":3,"sources":["redux/actions/userActions.js","redux/actions/messageActions.js","components/Sidebar.js","components/Message.js","components/MessageList.js","components/AddMessage.js","components/Navbar.js","ChatPage.js","UsernameForm.js","App.js","serviceWorker.js","redux/reducers/messageReducer.js","redux/reducers/userReducer.js","index.js","configureStore.js"],"names":["updateUser","user","type","updateUserList","list","addUser","console","log","concat","handlTextChange","text","submitMessage","dispatch","getState","axios","post","message","messageReducer","author","userReducer","currentUser","then","catch","e","Sidebar","react_default","a","createElement","id","className","this","props","users","map","i","key","username","Component","Message","_ref","MessagesList","_this","messages","components_Message","AddMessage","onSubmit","handleTextChange","target","value","_this2","onChange","placeholder","onKeyPress","mapDispatchToProps","connect","state","userList","NavBar","Menu","style","marginBottom","border","Item","position","Button","color","onClick","logOutButton","ChatPage","logOut","deleteUser","setUsername","react_router","to","get","res","data","messageList","_id","Object","objectWithoutProperties","updateMessages","_ref2","Navbar","components_Sidebar","MessageList","components_AddMessage","UsernameForm","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","bind","assertThisInitialized","preventDefault","setState","App","submitUser","src_ChatPage","src_UsernameForm_0","Boolean","window","location","hostname","match","INITIAL_STATE","arguments","length","undefined","action","objectSpread","toConsumableArray","store","preloadedState","middlewares","thunkMiddleware","enhancers","applyMiddleware","apply","composedEnhancers","composeWithDevTools","rootReducer","combineReducers","createStore","configureStore","WebSocket","onmessage","event","JSON","parse","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2451bedd.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const updateUser = user => {\n  return {\n    type: 'UPDATE_USER',\n    user,\n  };\n};\n\nexport const updateUserList = list => {\n  return {\n    type: 'UPDATE_USERLIST',\n    list,\n  };\n};\n\nexport const addUser = user => {\n  console.log(`inserting new user: ${user}`)\n  return {\n    type: 'ADD_USER',\n    user,\n  };\n};\n\nexport const deleteUser = (user) => (dispatch, getState) => {\n  axios.get('/messanger/deleteUser', {\"username\": user})\n    .then(() => { })\n    .catch(e => console.log(e));\n    dispatch(updateUser(''));\n    dispatch(updateUserList([]));\n};\n\nexport const submitUser = (user) => (dispatch, getState) => {\n\n    dispatch(updateUser(user));\n    axios.post('/messanger/postUser', {\"username\": user})\n      .then(() => { })\n      .catch(e => console.log(e));\n      dispatch(addUser(getState().userReducer.currentUser));\n};\n\n","import axios from 'axios';\n\nexport const updateMessages = messages => {\n  return {\n    type: 'UPDATE_MESSAGES',\n    messages,\n  };\n};\n\nexport const insertMessage = message => {\n  console.log('inserting message')\n  return {\n    type: 'INSERT_MESSAGE',\n    message,\n  };\n};\n\nexport const handlTextChange = text => {\n  return {\n    type: 'UPDATE_TEXT',\n    text,\n  };\n};\n\nexport const submitMessage = () => (dispatch, getState) => {\n\n  axios.post('/messanger/postMessage', {\"message\": getState().messageReducer.text, \n                                        \"author\": getState().userReducer.currentUser })\n    .then(() => { })\n    .catch(e => console.log(e));\n  dispatch(handlTextChange(''));\n};","\nimport React, { Component } from 'react'\n\nclass Sidebar extends Component {\n\n    render () {\n        return (\n    \n\t<aside id=\"sidebar\" className=\"sidebar\">\n\t   <div className=\"ui fluid container\" >\n\t\t<ul>\n\t\t\t{this.props.users.map((user, i) => \n\t\t\t\t<li key={i}>{user.username}</li>\n\t\t\t)}\n\t\t</ul>\n\t\t</div>\n\t</aside>\n)}}\n\nexport default Sidebar","import React from 'react'\n\nconst Message = ({message, author}) => (\n\t<p> \n\t     <i>{author}: {message} </i>\n\t</p>)\n\nexport default Message","import React, { Component } from 'react'\nimport Message from './Message'\n\n\nclass MessagesList extends Component {\n\n    render(){\n       return (\n\t   <section id=\"messages-list\" >\n\t\t<ul>\n            {this.props.messages.map((message, i) => \n                <Message key={i} \n                      message={message.message}\n            author={message.author === this.props.currentUser? 'me' : message.author}/>)}    \n\t\t</ul>\n\n\t</section>\n)}}\n\nexport default MessagesList","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { handlTextChange, submitMessage } from '../redux/actions/messageActions';\n\n\n\nclass AddMessage extends Component {\n\n  onSubmit = () => {\n    this.props.submitMessage();\n  }\n\n  handleTextChange = (e) => {\n    this.props.handlTextChange(e.target.value);\n  }\n\n  render() {\n\n\treturn (\n\t\t<section id=\"new-message\">\n            <input type=\"text\" value={this.props.text} onChange={this.handleTextChange}\n                placeholder=\"Type here to chat..\"\n\t\t\t\tonKeyPress={(e) => {\n\t\t\t\t\tif (e.key === 'Enter') {\n\t\t\t\t\t\tthis.props.submitMessage();\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t/>  \n\t\t</section>\n\t)}\n}\n\nconst mapStateToProps = (state) => {\n    return {\n      messages: state.messageReducer.messages,\n      text: state.messageReducer.text,\n      user: state.userReducer.currentUser,\n      userList: state.userReducer.userList,\n    };\n  };\n  \n  const mapDispatchToProps = { handlTextChange, submitMessage };\n  \n  export default connect( \n    mapStateToProps,\n    mapDispatchToProps,\n  )(AddMessage);\n\n","import React, { Component } from 'react';\nimport { Menu, Button } from 'semantic-ui-react';\n\nclass NavBar extends Component {\n\n\n   render () {\n       return (\n        <Menu style={{marginBottom: 0, border: '1px solid #3f3f3f'}}>\n          <Menu.Menu >\n             <Menu.Item >\n              <h2>Developer Chat : Final Project</h2> \n             </Menu.Item>\n           </Menu.Menu>\n\n           <Menu.Menu position=\"right\">\n     \n               <Menu.Item     >\n                    <Button color='blue'\n                            onClick={this.props.logOutButton\n                            }>\n                             Log Out\n                    </Button>\n               </Menu.Item>\n            </Menu.Menu>\n         </Menu>\n       );\n    }\n}\n\nexport default NavBar;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport {Redirect} from 'react-router-dom';\nimport { updateMessages, handlTextChange, submitMessage } from './redux/actions/messageActions';\nimport { updateUserList, deleteUser} from './redux/actions/userActions';\nimport Sidebar from \"./components/Sidebar\";\nimport MessagesList from \"./components/MessageList\";\nimport AddMessage from \"./components/AddMessage\";\nimport NavBar from \"./components/Navbar\";\nimport './App.css';\n\nclass ChatPage extends Component {\n  componentDidMount() {\n    axios.get('/messanger/getMessages')\n      .then((res) => {\n        //filters out the id attribute from the database array, saves to redux store:\n        console.log(res.data);\n        const resultArray = (res.data);\n        const messageList = resultArray.map(({_id, ...keepAttrs}) => keepAttrs);\n        this.props.updateMessages(messageList);\n      })\n      \n      .catch((e) => {\n        console.log(e);\n      });\n\n      axios.get('/messanger/getUsers')\n      .then((res) => {\n\n        //filters out the data portion from the database array, saves to redux store:\n        const resultArray = (res.data);\n        const userList = resultArray.map(({_id, ...keepAttrs}) => keepAttrs);\n        this.props.updateUserList(userList);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n\n  logOut = () => {\n     this.props.deleteUser(this.props.user);\n     this.props.setUsername('');\n     return (\n      <Redirect to=\"./Login\"/>\n     )\n  }\n\n  render() {\n     return (\n\n          <div>\n            <NavBar logOutButton ={this.logOut}/>   \n            <div id=\"container\">\n              <Sidebar users={this.props.userList}/>\n                 <section id=\"main\">\n                    <MessagesList messages={this.props.messages} currentUser={this.props.user}/>\n                    <AddMessage />\n                  </section>\n              </div>\n          </div>\n    )}}\n\nconst mapStateToProps = (state) => {\n  return {\n    messages: state.messageReducer.messages,\n    text: state.messageReducer.text,\n    user: state.userReducer.currentUser,\n    userList: state.userReducer.userList,\n  };\n};\n\nconst mapDispatchToProps = { updateMessages, updateUserList, handlTextChange, submitMessage, deleteUser };\n\nexport default connect( // from react-redux\n  mapStateToProps,\n  mapDispatchToProps,\n)(ChatPage);\n","import React, { Component } from 'react'\nimport axios from 'axios';\nimport './UsernameForm.css';\n\n\nclass UsernameForm extends Component {\n constructor(props) {\n   super(props)\n   this.onSubmit = this.onSubmit.bind(this)\n   this.onChange = this.onChange.bind(this)\n }\n\n onSubmit(e) {\n   e.preventDefault()\n   this.props.setUsername(e.target.username.value);\n }\n\n onChange(e) {\n    this.setState({ username: e.target.value })\n  }\n\n  render() {\n    return (\n        <div className=\"App\">\n        <header className=\"App-header\">\n        <div className=\"widget\">\n          <h2>Welcome to our Chat Application!</h2>\n          <form onSubmit={this.onSubmit}>\n            <input\n              type=\"text\"\n              placeholder=\"Please enter a username here: \"\n              id=\"username\"\n              onChange={this.onChange}\n            />\n            <input type=\"submit\" value=\"Join Chat\"/>\n          </form>\n          </div>\n       </header>\n     </div>\n   )\n  }\n}\n\n export default UsernameForm","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { updateUser, addUser, submitUser } from './redux/actions/userActions';\nimport ChatPage from \"./ChatPage\";\nimport UsernameForm from \"./UsernameForm\";\nimport './App.css';\n\nclass App extends Component {\n\n  state = {\n     username: null,\n  }\n\n  setUsername = (username) => {\n    console.log(`setUsername: ${username}`);\n    this.setState({username});\n    this.props.submitUser(username);\n  }\n\n    render() {\n      return (\n        <div id='main app'>\n        {/* If username is undefinied render the login page. Otherwise render Chat app page  */}\n        {\n          !this.state.username ?  <UsernameForm setUsername={this.setUsername}/> : <ChatPage setUsername={this.setUsername}/>\n        }\n        </div>\n      );\n    }\n  }\n  \n  const mapStateToProps = (state) => {\n    return {\n      currentUser: state.userReducer.currentUser,\n    };\n  };\n  \n  const mapDispatchToProps = { updateUser, addUser, submitUser };\n  \n  export default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  )(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const INITIAL_STATE = {\n  messages: [],\n  text: '',\n};\n\nconst messageReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case 'UPDATE_MESSAGES':\n      return {\n        ...state,\n        messages: action.messages,\n      };\n    case 'UPDATE_TEXT':\n      return {\n        ...state,\n        text: action.text,\n      };\n    case 'INSERT_MESSAGE':\n      return {\n        ...state,\n        messages: [...state.messages, action.message],\n      };\n    default:\n      return state;\n  }\n};\n\nexport default messageReducer;","const INITIAL_STATE = {\n    userList: [],\n    currentUser: 'timmy',\n  };\n  \n  const userReducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n      case 'UPDATE_USER':\n        return {\n          ...state,\n          currentUser: action.user,\n        };\n\n      case 'UPDATE_USERLIST':\n        return {\n          ...state,\n          userList: action.list,\n        };\n\n      case 'ADD_USER':\n        return {\n          ...state,\n          userList: [...state.userList, action.user],  \n        };\n\n      default:\n        return state;\n    }\n  };\n  \n  export default userReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport {insertMessage} from './redux/actions/messageActions';\nimport configureStore from './configureStore'\n\nconst store = configureStore()\n\nconst webSocket = new WebSocket('ws://localhost:4000/websocket');\n\n//now we have to handle incoming event:\nwebSocket.onmessage = (event) => {\n    console.log('index.js: ' +event.data)\n    let data = JSON.parse(event.data)\n    store.dispatch(insertMessage(data));\n};\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  , document.getElementById('root'));\n\nserviceWorker.unregister();\n","import { applyMiddleware, createStore } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { combineReducers } from \"redux\"\nimport messageReducer from './redux/reducers/messageReducer';\nimport userReducer from './redux/reducers/userReducer';\n\nexport default function configureStore(preloadedState) {\n  const middlewares = [thunkMiddleware]\n  const middlewareEnhancer = applyMiddleware(...middlewares)\n  const enhancers = [middlewareEnhancer]\n  const composedEnhancers = composeWithDevTools(...enhancers)\n  const rootReducer = combineReducers({\n    messageReducer, userReducer\n  });\n  \n  const store = createStore(rootReducer, preloadedState, composedEnhancers)\n\n  return store\n}"],"sourceRoot":""}